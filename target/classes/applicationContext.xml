<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <context:component-scan base-package="service, UI"/>

    <!--<context:property-placeholder location="classpath:jdbc.properties"/>-->

    <bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:net.properties</value>
                <value>classpath:jdbc.properties</value>
                <value>classpath:kafka.properties</value>
                <value>classpath:redis.properties</value>
                <value>classpath:ipServer.properties</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer" id="propertyConfigurer">
        <property name="ignoreResourceNotFound" value="true" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="properties" ref="properties"/>
    </bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:/mapper/departmentMapper.xml" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="sqlMapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!--redis集群配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${jedis.maxIdle}"/>
        <!-- 连接空闲的最小时间，达到此值后空闲连接将可能会被移除。负值(-1)表示不移除. -->
        <property name="minEvictableIdleTimeMillis" value="${jedis.minEvictableIdleTimeMillis}"/>
        <!-- 对于“空闲链接”检测线程而言，每次检测的链接资源的个数。默认为3 -->
        <property name="numTestsPerEvictionRun" value="${jedis.numTestsPerEvictionRun}"/>
        <!-- “空闲链接”检测线程，检测的周期，毫秒数。如果为负值，表示不运行“检测线程”。默认为-1. -->
        <property name="timeBetweenEvictionRunsMillis" value="${jedis.timeBetweenEvictionRunsMillis}"/>
    </bean>

    <bean id = "redisCluster" class = "redis.clients.jedis.JedisCluster" destroy-method="close">
        <constructor-arg>
            <set>
                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip3}"/>
                    <constructor-arg name="port" value="${redis.port3}"/>
                </bean>

                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip1}"/>
                    <constructor-arg name="port" value="${redis.port1}"/>
                </bean>

                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip2}"/>
                    <constructor-arg name="port" value="${redis.port2}"/>
                </bean>

                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip4}"/>
                    <constructor-arg name="port" value="${redis.port4}"/>
                </bean>

                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip5}"/>
                    <constructor-arg name="port" value="${redis.port5}"/>
                </bean>

                <bean class = "redis.clients.jedis.HostAndPort">
                    <constructor-arg name="host" value="${redis.ip6}"/>
                    <constructor-arg name="port" value="${redis.port6}"/>
                </bean>
            </set>
        </constructor-arg>

        <constructor-arg name = "poolConfig" ref = "jedisPoolConfig"/>
    </bean>

</beans> 